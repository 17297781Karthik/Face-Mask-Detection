import cv2import numpy as npfrom tensorflow.keras.models import load_modelfrom mtcnn import MTCNNmodel = load_model('cnn-model.keras')detector = MTCNN()def preprocess_frame(frame):    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)    frame = cv2.resize(frame, (150, 150))    frame = frame.astype('float32') / 255.0    frame = np.expand_dims(frame, axis=0)    return framecap = cv2.VideoCapture(0)while True:    ret, frame = cap.read()    if not ret:        break    faces = detector.detect_faces(frame)    for face in faces:        x, y, w, h = face['box']        face_region = frame[y:y+h, x:x+w]        preprocessed_face = preprocess_frame(face_region)        prediction = model.predict(preprocessed_face)[0][0]        threshold = 0.5        label = "Mask" if prediction > threshold else "No Mask"        color = (0, 255, 0) if label == "Mask" else (0, 0, 255)        cv2.putText(frame, label, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 1, color, 2)        cv2.rectangle(frame, (x, y), (x+w, y+h), color, 2)    cv2.imshow('Face Mask Detection', frame)    if cv2.waitKey(1) & 0xFF == ord('q'):        breakcap.release()cv2.destroyAllWindows()